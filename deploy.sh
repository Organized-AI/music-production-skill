#!/bin/bash
# Automated deployment script for music-production-skill
# Deploys to: https://github.com/Organized-AI/music-production-skill

set -e  # Exit on error

echo "========================================="
echo "Music Production Skill - Deployment"
echo "========================================="
echo ""

# Check if we're in the right directory
if [ ! -f "SKILL.md" ]; then
    echo "‚ùå Error: SKILL.md not found"
    echo "Please run this script from the music-production-skill directory"
    exit 1
fi

echo "‚úì Found SKILL.md"

# Count files
FILE_COUNT=$(ls -1 | wc -l | tr -d ' ')
echo "‚úì Found $FILE_COUNT files"

# Initialize git if needed
if [ ! -d ".git" ]; then
    echo ""
    echo "Initializing Git repository..."
    git init
    echo "‚úì Git initialized"
else
    echo "‚úì Git already initialized"
fi

# Add remote if needed
if ! git remote get-url origin >/dev/null 2>&1; then
    echo ""
    echo "Adding GitHub remote..."
    git remote add origin https://github.com/Organized-AI/music-production-skill.git
    echo "‚úì Remote added"
else
    echo "‚úì Remote already configured"
fi

# Verify remote
REMOTE_URL=$(git remote get-url origin)
echo "‚úì Remote: $REMOTE_URL"

# Stage all files
echo ""
echo "Staging files..."
git add .
STAGED_COUNT=$(git diff --cached --numstat | wc -l | tr -d ' ')
echo "‚úì Staged $STAGED_COUNT files"

# Show status
echo ""
echo "Git status:"
git status --short

# Create commit
echo ""
echo "Creating commit..."
git commit -m "Initial commit: Music Production Skill for EP-133 K.O. II

Natural language control for Teenage Engineering EP-133 K.O. II synthesizer through Claude Desktop.

Features:
‚Ä¢ Conversational control - Talk naturally to control hardware
‚Ä¢ 240+ sound library - 6 categories (Kicks, Snares, Cymbals/Hats, Percussion, Bass, Melodic/Synth)
‚Ä¢ Genre templates - House, Trap, Techno, Boom Bap patterns
‚Ä¢ Real-time MIDI - 48 pads, velocity 0-127, duration control
‚Ä¢ Sound search and browse - Find exactly what you need
‚Ä¢ Pattern sequencing - Create beats with BPM control
‚Ä¢ MCP server integration - 9 tools for device control

Technical:
‚Ä¢ MCP server: ep-133-koii (via ep-koii-skills package)
‚Ä¢ MIDI note range: 36-83 (4 groups √ó 12 pads)
‚Ä¢ Velocity dynamics: 128 levels with usage guidelines
‚Ä¢ Platform support: macOS, Linux, Windows
‚Ä¢ Setup time: <5 minutes
‚Ä¢ Latency: <150ms end-to-end

Usage:
‚Ä¢ Install: pip install git+https://github.com/Organized-AI/ep-koii-skills.git
‚Ä¢ Configure: Add MCP server to claude_desktop_config.json
‚Ä¢ Deploy: Copy SKILL.md to Claude skills directory
‚Ä¢ Use: 'Connect to my EP-133', 'Create a house beat', 'Find bass sounds'

Documentation:
‚Ä¢ SKILL.md - Main skill definition with YAML frontmatter
‚Ä¢ README.md - Complete repository documentation
‚Ä¢ START_HERE.md - 5-minute quick start guide
‚Ä¢ VISUAL_SHOWCASE.md - ASCII art visualizations and examples
‚Ä¢ examples/conversations.md - Real-world usage examples
‚Ä¢ deploy.sh - Automated deployment script

Architecture:
User ‚Üí Claude Desktop ‚Üí Music Production Skill ‚Üí MCP Server ‚Üí EP-KOII Package ‚Üí MIDI ‚Üí EP-133 Hardware

Makes hardware music production conversational! üéµü§ñ"

echo "‚úì Commit created"

# Push to GitHub
echo ""
echo "Pushing to GitHub..."
if git push -u origin main 2>&1; then
    echo "‚úì Push successful!"
else
    echo ""
    echo "‚ö† Push failed. Trying with --force..."
    echo "This will overwrite remote history if it exists."
    read -p "Continue? (y/n) " -n 1 -r
    echo ""
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        git push -u origin main --force
        echo "‚úì Force push successful!"
    else
        echo "‚ùå Deployment cancelled"
        exit 1
    fi
fi

# Verification
echo ""
echo "========================================="
echo "üéâ Deployment Complete!"
echo "========================================="
echo ""
echo "Repository: https://github.com/Organized-AI/music-production-skill"
echo ""
echo "Next steps:"
echo "1. Visit repository to verify files"
echo "2. Test installation in clean environment"
echo "3. Share with community!"
echo ""
echo "Makes hardware music production conversational! üéµü§ñ"
